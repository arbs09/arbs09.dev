name: CI
run-name: Static site deployment
on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    environment: deploy
    steps:
      - name: Checkout the current branch
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'node'

      - name: Install Zola
        run: sudo snap install zola --edge

      - name: Install npm dependencies from package.json
        run: npm install

      - name: build TailwindCSS
        run: npx tailwindcss -i static/input.css -o static/style.css --minify

      - name: Build Site
        env:
          TZ: 'Europe/Berlin'
        run: zola build

      - name: Install minify
        run: sudo apt-get install minify -y

      - name: minify site
        run: minify -r -a -o --html-keep-quotes --html-keep-document-tags --html-keep-quotes --html-keep-whitespace --json-keep-numbers --js-keep-var-names public/ public

      - name: Set up SSH known hosts
        run: |
          mkdir -p ~/.ssh
          touch ~/.ssh/known_hosts
          ssh-keyscan -H $DEPLOY_SERVER >> ~/.ssh/known_hosts
          ssh-keyscan -H $DEPLOY2_SERVER >> ~/.ssh/known_hosts
        env:
          DEPLOY_SERVER: ${{ secrets.DEPLOY_SERVER }}
          DEPLOY2_SERVER: ${{ secrets.DEPLOY2_SERVER }}

      - name: Install sshpass
        run: sudo apt-get install sshpass -y

      - name: Deploy the website
        run: |
          sshpass -p "${{ secrets.DEPLOY_PASSWORD }}" rsync -avx -e 'ssh' --delete --exclude '.ssh' public/ $DEPLOY_USERNAME@$DEPLOY_SERVER:./
        env:
          DEPLOY_SERVER: ${{ secrets.DEPLOY_SERVER }}
          DEPLOY_USERNAME: ${{ secrets.DEPLOY_USERNAME }}

      - name: Deploy the website to backup server
        run: |
          sshpass -p "${{ secrets.DEPLOY2_PASSWORD }}" rsync -avx -e 'ssh' --delete --exclude '.ssh' public/ $DEPLOY_USERNAME@$DEPLOY_SERVER:./
        env:
          DEPLOY_SERVER: ${{ secrets.DEPLOY2_SERVER }}
          DEPLOY_USERNAME: ${{ secrets.DEPLOY2_USERNAME }}

      - name: Purge cache
        uses: jakejarvis/cloudflare-purge-action@master
        env:
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}